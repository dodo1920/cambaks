<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.cambak21.mappers.cambakAdmin.adminMapper">
  <!-- ***************************************** 도연 ********************************************************************************* -->
	<select id="getMember" resultType="com.cambak21.domain.MemberVO">
		select * from Members where member_isDelete = 'N' order by member_registerDate limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="getTotMemberCnt" resultType="int">
		select count(*) from Members where member_isDelete = 'N'
	</select>
	
	<update id="deleteMember">
		update Members set member_isDelete = 'Y' where member_id = #{member_id}
	</update>	
	
	<update id="updateMember">
		update Members set member_name = #{member_name}, member_totPoint = #{member_totPoint} where member_id = #{member_id}
	</update>
	
	
	
	
	
	
	
	
	
	
	
  <!-- ***************************************** 도연 끝 ********************************************************************************* -->
  
  <!-- ***************************************** 대기 ********************************************************************************* -->
	<select id="getDayRevenue" resultType="com.cambak21.domain.RevenueVO">
     select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m-%d') as payment_date from BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
   where buyProduct_isFinished = 'y' and payment_date = date_format(now(),'%Y-%m-%d') group by date_format(p.payment_date,'%Y-%m-%d')
  </select>
  
  <select id="getPerDayRevenue" resultType="com.cambak21.domain.RevenueVO">
    select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m-%d') as payment_date from BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
   where buyProduct_isFinished = 'y' and now() > payment_date and payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -#{dateVal} DAY)) group by date_format(p.payment_date,'%Y-%m-%d')
  </select>
  
  <select id="betweenDayRevenue" resultType="com.cambak21.domain.RevenueVO">
     select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m-%d') as payment_date from BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
   where buyProduct_isFinished = 'y' and payment_date between #{startDate} and #{endDate} group by date_format(p.payment_date,'%Y-%m-%d');

  </select>
  <select id="selectMonthly" resultType="com.cambak21.domain.RevenueMonthVO">
     select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m-%d') as payment_date from BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -${revenueMonthly} MONTH)) group by date_format(p.payment_date,'%Y-%m')
  </select>
  <select id="selectWeekly" resultType="com.cambak21.domain.RevenueWeeklyVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, DATE_FORMAT(p.payment_date, '%Y-%u') as payment_week from BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -${revenuWeekly} WEEK)) group by payment_week;
  
  </select>
  <select id="thisMonthRevenue" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m') as payment_date from 
BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -0 MONTH)) group by date_format(p.payment_date,'%Y-%m');
  </select>
  <select id="prevMonthRevenue" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, date_format(p.payment_date,'%Y-%m') as payment_date from 
BuyProducts b join Payments p on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -1 MONTH)) group by date_format(p.payment_date,'%Y-%m');
  </select>
  <select id="thisMonthRefund" resultType="com.cambak21.domain.RevRefundVO">
  SELECT date_format(payment_date,'%Y-%m') as payment_date, sum(buy.buyProduct_totPrice) as buyProduct_totPrice FROM goot6.Payments pay 
join goot6.BuyProducts buy on pay.buyProduct_no = buy.buyProduct_no
where payment_isComit='환불' and now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -0 MONTH)) group by payment_isComit;
  </select>
  <select id="prevMonthRefund" resultType="com.cambak21.domain.RevRefundVO">
  SELECT date_format(payment_date,'%Y-%m') as payment_date, sum(buy.buyProduct_totPrice) as buyProduct_totPrice FROM goot6.Payments pay 
join goot6.BuyProducts buy on pay.buyProduct_no = buy.buyProduct_no
where payment_isComit='환불' and now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -1 MONTH)) group by payment_isComit;
  </select>
  
  <select id="thisWeekRevenue" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, 
DATE_FORMAT(p.payment_date, '%Y-%u') as payment_date from BuyProducts b join Payments p 
on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -0 WEEK)) group by DATE_FORMAT(p.payment_date, '%Y-%u');
  </select>
  <select id="prevWeekRevenue" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, 
DATE_FORMAT(p.payment_date, '%Y-%u') as payment_date from BuyProducts b join Payments p 
on b.buyProduct_no = p.buyProduct_no 
where buyProduct_isFinished = 'y' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -1 WEEK)) group by DATE_FORMAT(p.payment_date, '%Y-%u');
  </select>
  <select id="thisWeekRefund" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, 
DATE_FORMAT(p.payment_date, '%Y-%u') as payment_date from BuyProducts b join Payments p 
on b.buyProduct_no = p.buyProduct_no 
where payment_isComit='환불' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -0 WEEK)) group by DATE_FORMAT(p.payment_date, '%Y-%u');
  </select>
  <select id="prevWeekRefund" resultType="com.cambak21.domain.RevRefundVO">
  select sum(buyProduct_totPrice) as buyProduct_totPrice, 
DATE_FORMAT(p.payment_date, '%Y-%u') as payment_date from BuyProducts b join Payments p 
on b.buyProduct_no = p.buyProduct_no 
where payment_isComit='환불' and  now() > payment_date and 
payment_date > (SELECT DATE_ADD(NOW(), INTERVAL -1 WEEK)) group by DATE_FORMAT(p.payment_date, '%Y-%u');
  </select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 대기 끝 ********************************************************************************* -->
  
  <!-- ***************************************** 승권 ********************************************************************************* -->
  <insert id="insertProduct">
  	insert into Products (mainCategory_id, middleCategory_id, product_name, product_purchPrice, product_purchaseQty, product_saleQty, product_totQty, product_sellPrice, product_factory, product_detail, product_img1, product_show, product_shipPrice, product_title, product_popularProduct)
	values
	(#{mainCategory_id}, #{middleCategory_id}, #{product_name}, #{product_purchPrice}, #{product_purchaseQty}, #{product_saleQty}, #{product_purchaseQty}, #{product_sellPrice}, #{product_factory}, #{product_detail}, #{product_img1}, #{product_show}, #{product_shipPrice}, #{product_title}, #{product_popularProduct});
  </insert>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 승권 끝 ********************************************************************************* -->
   
  <!-- ***************************************** 원영 ********************************************************************************* -->
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 원영 끝 ********************************************************************************* -->
  
  <!-- ***************************************** 정민 ********************************************************************************* -->
  	<!-- 게시물 페이징 리스트 -->
  	<select id="prodList" resultType="com.cambak21.domain.ProductsVO">
  		select * from Products order by product_id desc limit #{pageStart}, #{perPageNum}
  	</select>
  	<!-- 총 게시물 개수 가져오기 -->
  	<select id="getTotalProdListCnt" resultType="int">
  		select count(*) from Products;
  	</select>
  
  	<!-- 검색된 게시글 총 개수 가져오기 -->
  	<select id="getTotalSearchProdListCnt" resultType="int">
  		select count(*) from Products where
  		<if test="searchType == 'product_name'">
  			product_name like concat('%', #{searchWord}, '%')
  		</if>
  		<if test="searchType == 'product_factory'">
  			product_factory like concat('%', #{searchWord}, '%')
  		</if>
  		
  	<!-- ********************전체 셀렉트 + 검색어 입력이 있는 경우****************************** -->
	<!-- 전체 셀렉트 + 검색어 입력이 있는 경우 -->
	  	<if test="searchType == 'searchAll'">
	  			product_factory like concat('%', #{searchWord}, '%') or product_name like concat('%', #{searchWord}, '%')
  		</if>
  		
  		<!-- 메인 카테고리 아이디값이 있는 경우,
  		<if test="mainCategory_id != null">
  			and mainCategory_id = #{mainCategory_id}
  		</if>  -->
  		
  		<!-- 미들 카테고리 아이디값이 있는 경우, 
  		<if test="middleCategory_id != null">
  			and middleCategory_id = #{middleCategory_id}
  		</if> -->
  		
  		<!-- product_show 전시 여부
  		<if test='product_show == "Y"'>
  			and product_show in('Y')
  		</if>
  		<if test='product_show == "N"'>
  			and product_show in('N')
  		</if>
  		<if test='product_show == "all"'>
  			and product_show in('Y','N')
  		</if> -->
  		
  	</select>
  
  	<!-- **********************검색된 게시글 리스트 출력, 동적 SQL 사용 부분(검색어)************************* -->
  	<select id="goSearchProdList" resultType="com.cambak21.domain.ProductsVO">
  		select * from Products where
  		<choose>
  			<!-- 제품명 검색 조건 -->
  			<when test="searchType == 'product_name' and mainCategory_id != 'mainCategory_id'">
  				product_name like concat('%', #{searchWord}, '%')
  				<if test="mainCategory_id != 'mainCategory_id'">
  					and mainCategory_id = #{mainCategory_id}
  					
  				</if>
  			</when>
  			<!-- 회사명 검색 조건 -->
  			<when test="searchType == 'product_factory' and mainCategory_id != 'mainCategory_id'">
  				product_factory like concat('%', #{searchWord}, '%')
  			</when>
  			<!-- 전체 검색 조건 -->
  			<when test="searchType == 'searchAll'">
  				(product_factory like concat('%', #{searchWord}, '%') or product_name like concat('%', #{searchWord}, '%'))
  				<!-- 메인 카테고리, 미들 카테고리 선택 유무 -->
  				<if test="mainCategory_id != 'mainCategory_id' ">
  					and mainCategory_id = #{mainCategory_id} 
  					<if test="middleCategory_id != 'middleCategory_id'">
  						and middleCategory_id = #{middleCategory_id} 
  					</if>
  				</if>
  				<!-- 진열 검색 여부 -->
  				<if test='product_show == "Y"'>
		  			and product_show in('Y')
		  		</if>
		  		<if test='product_show == "N"'>
		  			and product_show in('N')
		  		</if>
		  		<if test='product_show == "all"'>
		  			and product_show in('Y','N')
  				</if>
  			</when>
  			
  		</choose>

  		<!-- 메인 카테고리 아이디값이 있는 경우, 
  		<if test="mainCategory_id != null">
  			and mainCategory_id = #{mainCategory_id}
  		</if>  -->
  		
  		<!-- 미들 카테고리 아이디값이 있는 경우, 
  		<if test="middleCategory_id != null">
  			and middleCategory_id = #{middleCategory_id}
  		</if>  -->
  		
  		<!-- product_show 전시 여부
  		<if test='product_show == "Y"'>
  			and product_show in('Y')
  		</if>
  		<if test='product_show == "N"'>
  			and product_show in('N')
  		</if>
  		<if test='product_show == "all"'>
  			and product_show in('Y','N')
  		</if>-->
  		
  		
  		order by product_id desc limit #{pageStart}, #{perPageNum}
  	</select>
  
  	<!-- ajax 이용 메인 카테고리 리스트 출력 -->
  	<select id="getMainCategories" resultType="com.cambak21.domain.MainCategoryVO">
  		select * from MainCategories;
  	</select>
  
  	<select id="getMiddleCategories" resultType="com.cambak21.domain.MiddleCategoryVO">
  		select * from MiddleCategories where mainCategory_id=#{mainCategory_id}
  	</select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 정민 끝 ********************************************************************************* -->
  
  <!-- ***************************************** 종진 ********************************************************************************* -->
  
  
  	<select id="goGetBoard_admin" resultType="com.cambak21.domain.BoardVO">
  		select * from Boards where
	  		<if test="board_category != 'all'">
	  			board_category = #{board_category} and 
	  		</if>
  		board_writeDate between #{goStartDate} and #{goEndDate} order by board_no desc limit #{pageStart}, #{perPageNum}
  	</select>
  	
  	<select id="goGetreply_admin" resultType="com.cambak21.domain.ReplyBoardVO">
  		select * from ReplyBoards r, Boards b where
	  		<if test="board_category != 'all'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and 
	  		</if>
  		(replyBoard_writeDate between #{goStartDate} and #{goEndDate}) order by replyBoard_no desc limit #{pageStart}, #{perPageNum}
  	</select>
  
  
  
  
  	<select id="searchGetBoard_admin" resultType="com.cambak21.domain.BoardVO">
  		select * from Boards where
  		
	  		<if test="board_category == 'all' and searchboardType == 'title'">
	  			board_category = any (select board_category from Boards) and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'all' and searchboardType == 'content'">
	  			board_category = any (select board_category from Boards) and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'all' and searchboardType == 'member_id'">
	  			board_category = any (select board_category from Boards) and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'Tip' and searchboardType == 'title'">
	  			board_category = #{board_category} and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'Tip' and searchboardType == 'content'">
	  			board_category = #{board_category} and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'Tip' and searchboardType == 'member_id'">
	  			board_category = #{board_category} and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'QA' and searchboardType == 'title'">
	  			board_category = #{board_category} and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'QA' and searchboardType == 'content'">
	  			board_category = #{board_category} and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'QA' and searchboardType == 'member_id'">
	  			board_category = #{board_category} and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'humor' and searchboardType == 'title'">
	  			board_category = #{board_category} and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'humor' and searchboardType == 'content'">
	  			board_category = #{board_category} and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'humor' and searchboardType == 'member_id'">
	  			board_category = #{board_category} and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'notice' and searchboardType == 'title'">
	  			board_category = #{board_category} and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'notice' and searchboardType == 'content'">
	  			board_category = #{board_category} and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'notice' and searchboardType == 'member_id'">
	  			board_category = #{board_category} and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'CS' and searchboardType == 'title'">
	  			board_category = #{board_category} and board_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'CS' and searchboardType == 'content'">
	  			board_category = #{board_category} and board_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
	  		<if test="board_category == 'CS' and searchboardType == 'member_id'">
	  			board_category = #{board_category} and member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
  		(board_writeDate between #{goStartDate} and #{goEndDate}) order by board_no desc limit #{pageStart}, #{perPageNum}
  	</select>
  	
  	
  	<select id="searchGetreply_admin" resultType="com.cambak21.domain.ReplyBoardVO">
  		select * from ReplyBoards r, Boards b where
  		
  			<if test="board_category == 'all' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = any (select board_category from Boards) and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'all' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = any (select board_category from Boards) and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'all' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = any (select board_category from Boards) and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>

			<if test="board_category == 'Tip' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'Tip' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'Tip' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>

			<if test="board_category == 'QA' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'QA' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'QA' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>

			<if test="board_category == 'humor' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'humor' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'humor' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>

			<if test="board_category == 'notice' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'notice' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'notice' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>

			<if test="board_category == 'CS' and searchboardType == 'title'">
	  			 r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_title like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'CS' and searchboardType == 'content'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.replyBoard_content like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		<if test="board_category == 'CS' and searchboardType == 'member_id'">
	  			r.board_no = b.board_no and b.board_category = #{board_category} and r.member_id like concat('%', #{searchTxtValue}, '%') and
	  		</if>
	  		
		(replyBoard_writeDate between #{goStartDate} and #{goEndDate}) order by replyBoard_no desc limit #{pageStart}, #{perPageNum}
  	</select>
  
  
  
  
  
  
  
  	<select id="getTodayTotCnt" resultType="int">
  		select count(*) from Boards where date_format(board_writeDate, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d')
  	</select>
  
  	<select id="getTodayreplyTotCnt" resultType="int">
  		select count(*) from ReplyBoards where date_format(replyBoard_writeDate, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d')
  	</select>
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 종진 끝 ********************************************************************************* -->
  
  <!--  ***************************************** 효원 ********************************************************************************* -->
  
  <select id="readOrderList" resultType="com.cambak21.domain.AdminOrderListVO">
	select pay.payment_no, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
	des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice, 
	del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
	from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem
	where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
	and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id
	group by pay.payment_serialNo limit #{pageStart}, #{perPageNum}
  </select>
  
  
  <select id="readOrderListNum" resultType="int">
	select count(*) from (select pay.payment_no, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
	des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice, 
	del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
	from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem
	where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
	and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id
	group by pay.payment_serialNo) as lst
  </select>
  
  
  <select id="orderProductNum" resultType="int">
	select count(buyProduct_no) from Payments where payment_no = #{payment_no}
  </select>
  
  <select id="orderTotalPrice" resultType="int">
	select sum(buy.buyProduct_totPrice) from
	Payments pay, BuyProducts buy
	where pay.buyProduct_no = buy.buyProduct_no and payment_no = #{payment_no}
  </select>
  
  <select id="orderManageSearch" resultType="com.cambak21.domain.AdminOrderListVO">
	<if test="csOrderRange == 'noRange'">
	  	select pay.payment_no, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
		des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice,
		del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
		from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem, Products pro
		where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
		and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id and buy.product_id = pro.product_id
		
		<if test="checkOption == 'orderNum' and checkOptionSearch != null">
			and pay.payment_no = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseName' and checkOptionSearch != null">
			and mem.member_name = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseId' and checkOptionSearch != null">
			and pay.member_id = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseEmail' and checkOptionSearch != null">
			and mem.member_email = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchasePhone' and checkOptionSearch != null">
			and mem.member_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientName' and checkOptionSearch != null">
			and des.destination_toUser = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientPhone' and checkOptionSearch != null">
			and des.destination_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientAddr' and checkOptionSearch != null">
			and (des.destination_address like concat('%', #{checkOptionSearch}, '%') or des.destination_addressDetail like concat('%', #{checkOptionSearch}, '%'))
		</if>
		
		<if test="searchDateRange != 'all'">
			and pay.payment_date >= #{startDate} and pay.payment_date <![CDATA[<=]]> #{endDate}
		</if>
		
		<if test="productInfo == 'prodName' and productInfoSearch != null">
			and buy.product_name like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="productInfo == 'manufacturer' and productInfoSearch != null">
			and pro.product_factory like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="purchaseConfirmationBefore == true">
			and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'N'
		</if>
		
		<if test="purchaseConfirmation == true">
		and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'Y'
		</if>
		
		<if test="orderDeliveryReady">
		and del.delivery_status = '배송전'
		</if>
		
		<if test="orderOnDelivery">
		and del.delivery_status = '배송중'
		</if>
		
		<if test="orderDeliveryCompleted">
		and del.delivery_status = '배송완료'
		</if>
		
		group by pay.payment_serialNo limit #{pageStart}, #{perPageNum}
  	</if>
  	<if test="csOrderRange == 'check'">
	 	select payment_no, payment_date, product_name, lst.member_id, member_name, destination_toUser, 
		destination_mobile, point_usedPoint, buyProduct_totPrice,
		delivery_status, payInfo_way, payment_isComit
		from (select pay.payment_no, pay.payment_serialNo, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
		des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice,
		del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
		from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem, Products pro
		where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
		and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id and buy.product_id = pro.product_id
		
		<if test="checkOption == 'orderNum' and checkOptionSearch != null">
			and pay.payment_no = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseName' and checkOptionSearch != null">
			and mem.member_name = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseId' and checkOptionSearch != null">
			and pay.member_id = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseEmail' and checkOptionSearch != null">
			and mem.member_email = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchasePhone' and checkOptionSearch != null">
			and mem.member_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientName' and checkOptionSearch != null">
			and des.destination_toUser = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientPhone' and checkOptionSearch != null">
			and des.destination_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientAddr' and checkOptionSearch != null">
			and (des.destination_address like concat('%', #{checkOptionSearch}, '%') or des.destination_addressDetail like concat('%', #{checkOptionSearch}, '%'))
		</if>
		
		<if test="searchDateRange != 'all'">
			and pay.payment_date >= #{startDate} and pay.payment_date <![CDATA[<=]]> #{endDate}
		</if>
		
		<if test="productInfo == 'prodName' and productInfoSearch != null">
			and buy.product_name like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="productInfo == 'manufacturer' and productInfoSearch != null">
			and pro.product_factory like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="purchaseConfirmationBefore == true">
			and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'N'
		</if>
		
		<if test="purchaseConfirmation == true">
		and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'Y'
		</if>
		
		<if test="orderDeliveryReady">
		and del.delivery_status = '배송전'
		</if>
		
		<if test="orderOnDelivery">
		and del.delivery_status = '배송중'
		</if>
		
		<if test="orderDeliveryCompleted">
		and del.delivery_status = '배송완료'
		</if>
		
		group by pay.payment_serialNo) lst, RefundnExchanges refund
		where lst.payment_serialNo = refund.payment_serialNo
		
		<if test="csCancelRequest">
			and refund.refundnExchange_status = '주문취소요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csCancelCompleted">
			and refund.refundnExchange_status = '주문취소완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csChangeRequest">
			and refund.refundnExchange_status = '교환요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csChangeCompleted">
			and refund.refundnExchange_status = '교환완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csReturnRequest">
			and refund.refundnExchange_status = '반품요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csReturnCompleted">
			and refund.refundnExchange_status = '반품완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csRefundRequest">
			and refund.refundnExchange_status = '환불요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csRefundCompleted">
			and refund.refundnExchange_status = '환불완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
	limit #{pageStart}, #{perPageNum}
  	</if>
  	
  </select>
  
  <select id="orderManageSearchNum" resultType="int">
	<if test="csOrderRange == 'noRange'">
	  	select count(*) from
	  	(select pay.payment_no, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
		des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice,
		del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
		from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem, Products pro
		where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
		and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id and buy.product_id = pro.product_id
		
		<if test="checkOption == 'orderNum' and checkOptionSearch != null">
			and pay.payment_no = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseName' and checkOptionSearch != null">
			and mem.member_name = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseId' and checkOptionSearch != null">
			and pay.member_id = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseEmail' and checkOptionSearch != null">
			and mem.member_email = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchasePhone' and checkOptionSearch != null">
			and mem.member_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientName' and checkOptionSearch != null">
			and des.destination_toUser = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientPhone' and checkOptionSearch != null">
			and des.destination_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientAddr' and checkOptionSearch != null">
			and (des.destination_address like concat('%', #{checkOptionSearch}, '%') or des.destination_addressDetail like concat('%', #{checkOptionSearch}, '%'))
		</if>
		
		<if test="searchDateRange != 'all'">
			and pay.payment_date >= #{startDate} and pay.payment_date <![CDATA[<=]]> #{endDate}
		</if>
		
		<if test="productInfo == 'prodName' and productInfoSearch != null">
			and buy.product_name like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="productInfo == 'manufacturer' and productInfoSearch != null">
			and pro.product_factory like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="purchaseConfirmationBefore == true">
			and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'N'
		</if>
		
		<if test="purchaseConfirmation == true">
		and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'Y'
		</if>
		
		<if test="orderDeliveryReady">
		and del.delivery_status = '배송전'
		</if>
		
		<if test="orderOnDelivery">
		and del.delivery_status = '배송중'
		</if>
		
		<if test="orderDeliveryCompleted">
		and del.delivery_status = '배송완료'
		</if>
		
		group by pay.payment_serialNo) as num
  	</if>
  	<if test="csOrderRange == 'check'">
	 	select count(*) from
	 	(select payment_no, payment_date, product_name, lst.member_id, member_name, destination_toUser, 
		destination_mobile, point_usedPoint, buyProduct_totPrice,
		delivery_status, payInfo_way, payment_isComit
		from (select pay.payment_no, pay.payment_serialNo, pay.payment_date, buy.product_name, pay.member_id, mem.member_name, des.destination_toUser, 
		des.destination_mobile, poin.point_usedPoint, buy.buyProduct_totPrice,
		del.delivery_status, pinfo.payInfo_way, pay.payment_isComit
		from Payments pay, BuyProducts buy, Destinations des, PayInfos pinfo, Deliveries del, Points poin, Members mem, Products pro
		where pay.buyProduct_no = buy.buyProduct_no and pay.destination_no = des.destination_no and pay.payInfo_no = pinfo.payInfo_no
		and pay.payment_serialNo = del.payment_serialNo and pay.payment_date = poin.payment_date and mem.member_id = poin.member_id and buy.product_id = pro.product_id
		
		<if test="checkOption == 'orderNum' and checkOptionSearch != null">
			and pay.payment_no = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseName' and checkOptionSearch != null">
			and mem.member_name = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseId' and checkOptionSearch != null">
			and pay.member_id = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchaseEmail' and checkOptionSearch != null">
			and mem.member_email = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'PurchasePhone' and checkOptionSearch != null">
			and mem.member_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientName' and checkOptionSearch != null">
			and des.destination_toUser = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientPhone' and checkOptionSearch != null">
			and des.destination_mobile = #{checkOptionSearch}
		</if>
		
		<if test="checkOption == 'RecipientAddr' and checkOptionSearch != null">
			and (des.destination_address like concat('%', #{checkOptionSearch}, '%') or des.destination_addressDetail like concat('%', #{checkOptionSearch}, '%'))
		</if>
		
		<if test="searchDateRange != 'all'">
			and pay.payment_date >= #{startDate} and pay.payment_date <![CDATA[<=]]> #{endDate}
		</if>
		
		<if test="productInfo == 'prodName' and productInfoSearch != null">
			and buy.product_name like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="productInfo == 'manufacturer' and productInfoSearch != null">
			and pro.product_factory like concat('%', #{productInfoSearch}, '%')
		</if>
		
		<if test="purchaseConfirmationBefore == true">
			and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'N'
		</if>
		
		<if test="purchaseConfirmation == true">
		and pay.payment_isComit = '결제완료' and pay.payment_isChecked = 'Y'
		</if>
		
		<if test="orderDeliveryReady">
		and del.delivery_status = '배송전'
		</if>
		
		<if test="orderOnDelivery">
		and del.delivery_status = '배송중'
		</if>
		
		<if test="orderDeliveryCompleted">
		and del.delivery_status = '배송완료'
		</if>
		
		group by pay.payment_serialNo) lst, RefundnExchanges refund
		where lst.payment_serialNo = refund.payment_serialNo
		
		<if test="csCancelRequest">
			and refund.refundnExchange_status = '주문취소요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csCancelCompleted">
			and refund.refundnExchange_status = '주문취소완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csChangeRequest">
			and refund.refundnExchange_status = '교환요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csChangeCompleted">
			and refund.refundnExchange_status = '교환완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csReturnRequest">
			and refund.refundnExchange_status = '반품요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csReturnCompleted">
			and refund.refundnExchange_status = '반품완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
		
		<if test="csRefundRequest">
			and refund.refundnExchange_status = '환불요청' and refund.refundnExchange_isChecked = 'N'
		</if>
		
		<if test="csRefundCompleted">
			and refund.refundnExchange_status = '환불완료' and refund.refundnExchange_isChecked = 'Y'
		</if>
	) as num
  	</if>
  	
  </select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- ***************************************** 효원 끝 ********************************************************************************* -->

  </mapper>