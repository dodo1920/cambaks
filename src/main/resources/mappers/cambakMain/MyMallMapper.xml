<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mappers.cambakMain.MyMallMapper">

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 대기 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<select id="getTotalRefund" resultType="int">
		select count(*) from
		goot6.RefundnExchanges where member_id = #{member_id}
	</select>

	<select id="getRefundList"
		resultType="com.cambak21.domain.RefundVO">
		select pay.payment_serialNo, payment_date,
		refundnExchange_date,
		refundnExchange_reason, refundnExchange_status,
		refundnExchange_isChecked, product_name, buyProduct_totPrice
		from
		goot6.RefundnExchanges ref join goot6.Payments pay on
		ref.payment_serialNo = pay.payment_serialNo
		join goot6.BuyProducts pro
		on pay.buyProduct_no = pro.buyProduct_no
		where ref.member_id =
		#{member_id} order by pay.payment_serialNo desc limit #{pageStart}, #{perPageNum} 
	</select>
	
	<select id="getTotalOrder" resultType="int">
		SELECT count(*) FROM goot6.BuyProducts where member_id=#{member_id} and buyProduct_isFinished='Y';
	</select>
	<select id="getTotalOrderList"
	resultType="com.cambak21.domain.BuyProductPaymentVO">
	SELECT bp.buyProduct_no, bp.member_id, bucket_no, product_name,
	buyProduct_qty, product_sellPrice,
	buyProduct_deliveriPay, buyProduct_totPrice, buyProduct_isFinished, product_id, payment_no,
	payment_serialNo, payInfo_no, destination_no, payment_date,
	payment_deliveryMsg, payment_isComit,
	payment_isChecked
	FROM goot6.Payments pay join goot6.BuyProducts bp on pay.buyProduct_no =
	bp.buyProduct_no where bp.member_id=#{member_id} and
	buyProduct_isFinished='Y' order by bp.buyProduct_no desc limit
	#{pageStart}, #{perPageNum}
</select>
	<select id="searchOrder"
	resultType="com.cambak21.domain.BuyProductPaymentVO">
	SELECT bp.buyProduct_no, bp.member_id, bucket_no, product_name,
	buyProduct_qty, product_sellPrice,
	buyProduct_deliveriPay, buyProduct_totPrice, buyProduct_isFinished, product_id, payment_no,
	payment_serialNo, payInfo_no, destination_no, payment_date,
	payment_deliveryMsg, payment_isComit,
	payment_isChecked
	FROM goot6.Payments pay join goot6.BuyProducts bp on pay.buyProduct_no =
	bp.buyProduct_no where bp.member_id=#{member_id} and
	buyProduct_isFinished='Y' and bp.product_name like concat('%',
	#{searchWord}, '%') order by bp.buyProduct_no desc limit #{pageStart},
	#{perPageNum}
</select>
	<select id="searchOrderCnt" resultType="int">
		SELECT count(*) FROM goot6.BuyProducts where member_id=#{member_id} and buyProduct_isFinished='Y' and product_name like concat('%', #{searchWord}, '%') order by buyProduct_no
	</select>
	<select id="getOrder" resultType="com.cambak21.domain.BuyProductVO">
		SELECT * FROM goot6.BuyProducts where member_id=#{member_id} and buyProduct_no=#{buyProduct_no} and buyProduct_isFinished='Y' order by buyProduct_no desc
	</select>
	<select id="getDest" resultType="int">
		SELECT destination_no FROM goot6.Payments where member_id=#{member_id} and buyProduct_no=#{buyProduct_no}
	</select>
	<select id="getDestOne" resultType="com.cambak21.domain.DestinationVO">
		SELECT * FROM goot6.Destinations where destination_no = #{destination_no}
	</select>
	<select id="getPayno" resultType="int">
		SELECT payInfo_no FROM goot6.Payments where member_id=#{member_id} and buyProduct_no=#{buyProduct_no}
	</select>
	<select id="getPayInfo" resultType="com.cambak21.domain.PayInfoVO">
		SELECT * FROM goot6.PayInfos where payInfo_no = #{payInfo_no}
	</select>
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 원영 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 정민 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<!-- 마이페이지-나의 적립금 포인트 적립 내역 가져오기 -->
	<select id="getPointList"
		resultType="com.cambak21.domain.MyPointVO">
		select p.point_no, p.member_id, p.grade_name, p.buyProduct_totPrice, p.point_reason, p.point_usedPoint, 
		p.point_savingDate, p.point_futurePoint, p.payment_date, b.product_name from Points p, BuyProducts b 
		where p.buyProduct_no = b.buyProduct_no and p.member_id = #{member_id} order by payment_date desc 
		limit #{pageStart}, #{perPageNum} 
	</select>
	<!-- 마이페이지-나의 적립금 총 게시물 개수 가져오기 -->
	<select id="getPointListCnt" resultType="int">
		select count(*) from Points where member_id = #{member_id}
	</select>
	<!-- 마이페이지-나의 적립금 총 보유 포인트 가져오기  --> 
	<select id="getTotMyPoint" resultType="int">
		select member_totPoint as '나의 포인트' from Members where member_id = #{member_id}
	</select>
	
	<!-- 마이페이지-나의 적립금 총 적립예정 포인트 가져오기 -->
	<select id="getTotMyFuturePoint" resultType="int">
		select sum(point_futurePoint) from Points where member_id = #{member_id} and  point_savingDate = '2000-12-31 00:00:00'
	</select>
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 승권 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	<select id="getListProdQa"
		resultType="com.cambak21.domain.MyQAVO">
		select pqa.prodQA_no, p.product_id, p.product_name,
		pqa.prodQA_content, pqa.prodQA_date, pqa.prodQA_completed
		from Products p
		inner join ProdQAs pqa
		on pqa.product_id = p.product_id
		where pqa.member_id = #{member_id}
		order by pqa.prodQA_date desc
		limit
		0, 10;
	</select>

	<select id="prodQaCnt" resultType="int">
		select count(*) from ProdQAs
		where member_id = #{member_id};
	</select>

	<!-- 답변 가져오기 -->
	<select id="getAnswer" resultType="com.cambak21.domain.ProdQAVO">
		select * from ProdQAs where
		prodQA_ref = #{prodQA_no} and prodQA_refOrder = 2;
	</select>

	<!-- 장바구니 리스트 가져오기 -->
	<select id="getCartList"
		resultType="com.cambak21.domain.MyBucketListVO">
		select p.product_id, p.product_name, p.product_img1,
		bk.bucket_sellPrice, bk.bucket_buyQty, bk.bucket_totBuyPrice,
		bk.bucket_isChecked, (select floor(avg(pr.prodReview_grade)) from ProdReviews pr where product_id = p.product_id) as 'star'
		from Buckets bk
		inner join Products p
		on bk.product_id = p.product_id
		where bk.member_id =
		#{member_id}
		LIMIT 0, 10;
	</select>

	<!-- 장바구니 수량 변경 -->
	<update id="changeQty">
		update Buckets set bucket_buyQty = #{qty},
		bucket_totBuyPrice = #{qty} * bucket_sellPrice
		where member_id =
		#{member_id}
		and product_id = #{product_id};
	</update>

	<!-- 체크박스 on off -->
	<update id="checkOnOff">
		update Buckets set bucket_isChecked = if(bucket_isChecked = 'Y', 'N', 'Y') where member_id = #{member_id} and product_id = #{product_id};
	</update>

	<!-- 장바구니 개별아이템 삭제 -->
	<!-- BuyProduct 테이블에 있는 데이터 지우기 -->
	<delete id="deleteItemBP">
		delete from BuyProducts where member_id = #{member_id} and product_id = #{product_id};
	</delete>
	<!-- 장바구니 테이블에 있는 데이터 지우기 -->
	<delete id="deleteItemB">
		delete from Buckets where member_id = #{member_id} and product_id = #{product_id};
	</delete>
	
	<!-- 장바구니 아이템 전체 삭제 -->
	<delete id="deleteItemAllBP">
		delete from BuyProducts where member_id = #{member_id};
	</delete>
	<!-- 장바구니 테이블에 있는 데이터 지우기 -->
	<delete id="deleteItemAllB">
		delete from Buckets where member_id = #{member_id};
	</delete>
	
	<!-- 주문하기 -->
	<!-- 장바구니에서 Y체크 된것들만 가져오기 -->
	<select id="getBucketInfos" resultType="com.cambak21.domain.MyBucketCheckdVO">
		select b.member_id, b.bucket_no, p.product_name, b.bucket_buyQty, b.bucket_sellPrice, b.bucket_totBuyPrice, p.product_id, b.bucket_isChecked 
		from Buckets b
		inner join Products p
		on b.product_id = p.product_id
		where b.member_id = #{member_id}
		and b.bucket_isChecked = 'Y';
	</select>
	<!-- BuyProducts테이블에 insert -->
	<insert id="insertBP" parameterType="java.util.Map"> <!-- DAO에서 Map을 보냈기 때문에 -->
		insert into BuyProducts (member_id, bucket_no, product_name, buyProduct_qty, product_sellPrice, buyProduct_totPrice, product_id) values
		<foreach collection="vo" item="item" separator=",">
			(#{item.member_id}, #{item.bucket_no}, #{item.product_name}, #{item.bucket_buyQty}, #{item.bucket_sellPrice}, #{item.bucket_totBuyPrice}, #{item.product_id})
		</foreach>
	</insert>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 태훈 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->

</mapper>